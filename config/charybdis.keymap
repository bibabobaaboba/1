#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mt LEFT_GUI TAB  &kp Q  &kp W  &kp E      &kp R      &kp T    &kp Y  &kp U          &kp I      &kp O    &kp P     &mt RIGHT_BRACKET LEFT_BRACKET
&kp LEFT_SHIFT    &kp A  &kp S  &kp D      &kp F      &kp G    &kp H  &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL         &kp Z  &kp X  &kp C      &kp V      &kp B    &kp N  &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp APOS
                                &kp LCTRL  &kp SPACE  &mo 1    &mo 2  &kp BACKSPACE
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
